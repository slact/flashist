<html>
  <head>
    <script type='text/javascript' src='moo.js'></script>
    <style type="text/css">
      form {
        max-width: 500px;
        border: 1px solid #ccc;
        position: relative;
        top: 0;
      }
      form label {
        margin-bottom: 0.5em;
        display: block;
        border-radius: 2em;
        background: #f0f4f0;
        border: 4px solid #cdc;
        padding: 0.5em;
      }
      input[type=range] {
        display: block;
        width:90%;
        margin: auto;
        margin-bottom: 0.5em;
      }
      div.rangeInfo {
        display: block;
        margin-right: 1em;
        text-align: right;
        color: #CA3;
      }
      .info {
        font-size: 70%;
      }

      input[type=range]::-webkit-slider-thumb {
        box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
        border: 1px solid #000000;
        height: 36px;
        width: 16px;
        border-radius: 3px;
        cursor: pointer;
        -webkit-appearance: none;
        margin-top: -14px;
      }

      input[type=range]::-moz-range-thumb {
        box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
        border: 1px solid #000000;
        height: 36px;
        width: 16px;
        border-radius: 3px;
        cursor: pointer;
      }

      input[type=range]::-ms-thumb {
        box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
        border: 1px solid #000000;
        height: 36px;
        width: 16px;
        border-radius: 3px;
        cursor: pointer;
      }

      
    </style>
    <meta content="width=device-width, initial-scale=1" name="viewport" />
  </head>
  <body>
    <form id="active" method='post' action='/active'>
      <h2>Active Settings</h2>
      <p class="info">When the music's playing</p>
      <label>
        Peak Smoothing
        <p class="info">
          The less smoothing, the more varied the brightness
        </p>
        <input name='peaks_measure_count' list='smoothings' type='range' min='1' max='15' value='<%=@s2rgb.peaks_measure_count%>' />
        <datalist id='smoothings'>
          <option value='1' label='spiky' />
          <option value='4' label='not too spiky' />
          <option value='10' label='smooth and low' />
        </datalist>
      </label>
      <label>
        Amplification
        <p class="info">
          Boost the brightness
        </p>
        <input name='amplification' list='amplifications' type='range' min='1' max='14' value='<%=@s2rgb.amplification%>' />
        <datalist id='amplifications'>
          <option value='1' label='None' />
          <option value='2' label='Just a bit' />
          <option value='5' label='Might be too bright' />
          <option value='11' label='This one goes to 11' />
          <option value='11' label='Way past overdrive' />
        </datalist>
      </label>
      
      <label>
        Color responsiveness
        <p class="info">
          How much the color depends on dominant pitch
        </p>
        <input name='colorscale' type='range' list="colorscales" min='1' max='3' value='<%=@s2rgb.colorscale%>' step='0.1' />
        <datalist id='colorscales'>
          <option value='1' label='normal' >
          <option value='1.2' label='increased' >
          <option value='1.5' label='interesting' >
          <option value='2' label='colorful' >
          <option value='2.5' label='wacky' >
          <option value='3' label='rainbow clown' >
        </datalist>
      </label>
      
      <label>
        Color drift
        <p class="info">
          How fast colors cycle around regardless of pitch
        </p>
        <input name='colordrift' list='colordrifts' type='range' min='0' max='0.03' value='<%=@s2rgb.colordrift%>' step='0.00001' />
        <datalist id='colordrifts'>
          <option value='0' label='none' />
          <option value='0.001' label='slow' />
          <option value='0.01' label='fast' />
          <option value='0.03' label='double rainbow' />
        </datalist>
      </label>
      
      <label>
        Color Temperature
        <p class="info">
          for setting the mood right
        </p>
        <input name='redblue_shift' list='temps' type='range' min='-1' max='1' value='<%=@s2rgb.redblue_shift%>' step='0.01' />
        <datalist id='temps'>
          <option value='-1' label='the bluest' />
          <option value='-0.5' label='kind of blue' />
          <option value='-0.1' label='a hint of blue' />
          <option value='0' label='neutral' />
          <option value='0.1' label='a hint of red' />
          <option value='0.5' label='reddish' />
          <option value='0.9' label='martial' />
          <option value='1' label='red alert' />
        </datalist>
      </label>
    </form>
    
    <form id="idle" method="post" action="/idle">
      <h2>Idle Settings</h2>
      <p class="info">when the music's over</p>
      <label>
        Hue cycling speed
        <p class="info"></p>
        <input name="color_cycling_speed" type="range" list="color_cycling_speeds" min='0' max='0.1' step="0.0001" />
        <datalist id="color_cycling_speeds" />
          <option value="0" label="none" />
          <option value="0.0005" label="imperceptible" />
          <option value="0.001" label="molasses" />
          <option value="0.003" label="lowrider" />
          <option value="0.007" label="slow jam" />
          <option value="0.02" label="noticeable" />
          <option value="0.05" label="attention-grabbing" />
          <option value="0.07" label="wacky" />
          <option value="0.1" label="rainbow trout feeding frenzy" />
        </datalist>
      </label>
      <label>
        Brightness cycling speed
        <p class="info"></p>
        <input name="brightness_cycling_speed" type="range" list="brightness_cycling_speeds" min='0' max='0.08' step="0.0005" />
        <datalist id="brightness_cycling_speeds" />
          <option value="0" label="none" />
          <option value="0.0001" label="imperceptible" />
          <option value="0.001" label="creeping" />
          <option value="0.005" label="gradual" />
          <option value="0.01" label="noticeable" />
          <option value="0.06" label="kinda fast" />
          <option value="0.08" label="attention" />
        </datalist>
      </label>
      <label>
        Current color
        <p class="info">Turn down cycling if you want this color to be constant</p>
        <input name="current_color" type="color" />
      </label>
    </form>
    <script type='text/javascript'>
      var sendOnChangeEnabled = true;
      
      function applyJSONInfo(data) {
        sendOnChangeEnabled = false;
        
        (["active", "idle"]).each(function(kind) {
          var form = document.getElement('form#' + kind);
          Object.each(data[kind], function(val, name) {
            var el = form.getElement('input[name=' + name + ']');
            if(!el) return;
            el.set('value', val);
          });
        })
        
        sendOnChangeEnabled = true;
      }
    
      function applyRangeLabels(el) {
        var opt = el.retrieve('list').getChildren()
        var i;
        var curLbl = false;
        var prev = false;
        var val;
        for(i=0; i<opt.length; i++) {
          val = parseFloat(opt[i].get('value'));
          var elVal = parseFloat(el.value);
          if(elVal < val) {
            curLbl = (prev ? prev : opt[i]).get('label');
            break;
          }
          else if(elVal == val || (elVal > val && i >= opt.length)) {
            curLbl = opt[i].get('label');
            break;
          }
          prev = opt[i];
        }
        if(curLbl) {
          el.retrieve('info').set('text', curLbl);
        }
      }
      document.getElements('form').each(function(form) {
        
        form.getElements('input[type=range]').each(function(el) {
          var listEl = form.getElementById(el.get('list'));
          console.log("going through ", el);
          if(!listEl) return;
          var info = new Element('div', {'class':"rangeInfo", text:" "});
          el.grab(info, 'after');
          el.store('info', info);
          el.store('list', listEl);
          el.addEvent('input', function() {
            applyRangeLabels(el);
          });
          
        });
        
        var updateRequest = new Request.JSON({url: form.get('action'), method: "POST"})
        updateRequest.addEvent('success', applyJSONInfo);
        form.getElements('input').addEvent('change', function(el) {
          if(sendOnChangeEnabled) {
            updateRequest.send(form);
          }
        });
      });
      
      document.addEvent('domready', function() {
        document.getElements('input[type=range]').each(applyRangeLabels);
        
        var pollRequest = new Request.JSON({url: "/info", method: "GET"});
        pollRequest.addEvent('success', applyJSONInfo);
        setInterval(function() {
          pollRequest.send();
        }, 10000);
      });
    </script>
  </body>
</html>
        
